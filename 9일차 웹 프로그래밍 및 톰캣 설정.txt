get : <key,value> 값으로 4K로 보냄. 서버에 부담이 없음
post : body에 <key, value> 값으로 4G까지 넘어감. 서버에 부담이 감
Get : 데이터 주소 뒤에 '이름','값'이 결합된 스트링 형태
POST : 데이터를 압축하고 서버로 전송후 해석함
Session : Server에 데이터를 저장하여 브라우저가 닫히거나 서버에서 삭제시 사라짐
Cookie : 웹 사이트의 방문기록을 남겨 사용자와 웹 사이트 사이를 매개해 주는 정보로 Client에 텍스트 파일로 저장
정적인 파일 : HTML, TXT, 임의의 파일, css, JS
동적인 파일 : JSP, PHP, ASPX
MIME : 클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘.
브라우저들은 리소스를 내려받았을 때 해야 할 기본 동작이 무엇인지를 결정하기 위해 사용
IPC : 프로세스 간 통신
WAS(Web Application Server) : 웹에서 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기 위해 사용
웹에서 사용하는 함수(톰캣)
아파치 : 프로세스
NGINX : 스레드
IIS : MS
브라우저가 서버에 데이터 요청 시
1. 상태코드를 먼저 전달
2. 응답데이터를 보냄(response header)

sevice : 따로 실행을 하지 않아도 컴퓨터 실행과 동시에 실행되는 프로세스. UI가 따로 없어 출력이 없다
JSP 동작 방식 특징
프로세스 방식이 아닌 스레드 방식으로 실행
클라이언트의 요구를 처리하는 기능은 최초 한번만 메모리에 로드
클라이언트가 동일한 기능을 요구하면 기존에 사용한 기능을 재사용


















