리플랙션 : 힙 영역에 로드된 Class 타입의 객체를 통해, 원하는 클래스의 인스턴스를 생성할 수 있도록 지원하고, 
인스턴스의 필드와 메소드를 접근 제어자와 상관 없이 사용할 수 있도록 지원하는 API
init : 설정된 정보를 재정의
set, map 차이
Set은 순서가 보장되지 않고 Key값이 하나만 들어가고 중복을 허용하지 않는다. 
Map은 순서가 보장되지 않고, Key 중복은 허용하지 않지만 Value의 중복은 허용된다
URI, URL 차이
URI : 리소스의 위치와 고유식별자
URL : 리소스가 있는 위치를 지정
invoke : 메소드의 대리자를 실행. 외부 스레드가 메인폼의 invoke를 호출
API(Application Programming Interface) : 응용프로그램 사이의 연결. 데이터 통신
함수의 집합 및 함수들에 대한 명세 포함
<c:if : 조건문을 하나만 씀
<c:choose : 조건문을 여러개 쓸수 있음

메소드 호출방법
1. 일반 메서드 : obj.method()=>객체가 있어야함
2. 정적 메서드 : ClassName.method()

web.xml 설정
<servlet> : 서블릿에 관한 정보 설정
<servlet-class> : 서블릿 클래스에 대한 정보 설정(package명.class이름). servlet-name보다 뒤에 와야됨
<servlet-name> : 설정한 서블릿 클래스의 이름을 지정. 
<servlet-mapping> : 특정 servlet을 요청할 때 전체 경로를 쓰지 않고 간단하게 경로를 표현
<url-pattern> : url패턴을 지정해줌
<init-param> : 초기 파라미터 설정
<description> : 웹 애플리케이션에 대한 설명

메서드
getConstructor() : public으로 선언된 생성자에 접근
getDeclaredConstructor() : 모든 생성자에 접근
newInstance : 새로운 객체 생성
Class.forName : 컴파일 타임에 직접적인 참조 없이 런타임에 동적으로 클래스를 로드함






















