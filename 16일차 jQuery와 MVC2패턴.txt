HTML5 : 기존 버전에서 동여상이나 오디오, 그리고 위치 정보 등을 지원
시맨틱 웹 : 기계가 이해할수 있고 처리할 수 있는 웹 콘텐츠를 만드는 것
제이쿼리 : 화면의 동적 기능을 JS보다 좀 더 쉽고 편리하게 개발할 수 있게 해주는 JS 기반 라이브러리
제이쿼리 특징
- CSS 선택자를 사용해 각 HTML 태그에 접근해서 작업하므로 명료하면서도 읽기 쉬운 형태로 표현
- 매서드 체인 방식으로 여러 개의 동작이 한 줄로 나열
- 많은 플러그인을 쉽고 빠르게 이용
- 브라우저 종류에 상관없음
선택자 종류
- All selector : 모든 DOM 선택
- ID selector : 해당되는 id를 가지는 DOM을 선택
- Element selector : 해당되는 이름을 가지는 DOM을 선택
- class selector : CSS중 해당되는 클래스 이름을 가지는 DOM을 선택
- Multiple selector : 해당되는 선택자를 가지느 모든 DOM을 선택
HTML body부분이 모두 파싱되고 스크립트가 실행
$(document).ready(함수()){} : 브라우저가 실행되자마자 실행됨
innerHTML : 웹 요소의 내용을 수정하며 HTML 태그까지 반영하며 표시
$(id명).html() : 문자열을 입력하여 출력함
$(#id명).val() : 입력된 문자를 변수로 만듬
AJAX : JS+XML. JS를 이용한 비동기 통신으로 클라이언트와 서버 간의 데이터 통신 기술
Ajax 속성
- type : 통신타입을 설정
- url : 요청할 url을 설정
- async : 비동기식으로 처리 여부 설정
- data : 서버에 요청할 때 보낼 매개변수를 설정
- dataType : 응답 받을 데이터 타입을 설정
- success : 요청 및 응답에 성공했을 때 처리
- error : 요청 및 응답에 실패했을 떄 처리 
- complete : 모든 작업을 마친 후 처리
<![CDATA[문자]] : 문자를 순수한 형태로 해석함
&lg; : 문자에서 < 로 바꿔줌
&gt : 문자에서 > 로 바꿔줌
prop : 속성을 지정해줌
변수.cloneNode() : 메서드는 이 메서드를 호출한 변수 의 복제된 Node를 반환

모델1 : 순수 JSP 코드
모델2 : 웹 애플리케이션의 각 기능을 분리해서 구현
하나의 Servlet이 받아 그 결과를 JSP 페이지로 전달
동작방식 : 브라우저 요청->요청 처리-> 로직처리 -> DB -> 로직처리 -> 요청 처리 -> 화면 기능 -> 출력
특징
- 각 기능이 분리되어 있어 개발 및 유지보수가 편리
- 각 기능의 재사용성이 높아짐
- 디자이너와 개발자의 작업을 분업화해서 쉽게 개발


















