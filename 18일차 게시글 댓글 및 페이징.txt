서블릿+JSP로 데이터 처리 => 서블릿으로 처리 후 JSP로 출력(진입점이 JSP면 안됨)
Model2 : JSP로 실행하지 않고 진입점을 만들어서(ex. insertForm.do) JSP로 넘겨줘야함
서블릿의 역할 : 데이터 처리, 양식출력 등 모든 기능을 담당함

페이지 이동 
서블릿 : json
서버 : sendRedirect(), refresh()(header를 이용)-브라우저로 보냈다가 다시 호출
클라이언트 : href

데이터 이동 : 포워드, json, sendRedirect()

포워드 : 하나의 서블릿에서 다른 서블릿이나 JSP와 연동하는 방법
포워드 기능
- 요청에 대한 추가 작업을 다른 서블릿에게 수행
- 요청에 포함된 정보를 다른 서블릿이나 JSP와 공유할 수 있음
- 요청에 정보를 포함시켜 다른 서블릿에 전달
- 모델2 개발 시 서블릿에서 JSP로 데이터를 전달하는 데 사용
포워딩 방법
- Redirect : 서블릿의 요청이 클라이언트의 웹 브라우저를 다시 거쳐 요청되는 방식
서블릿에 바인딩한 데이터를 다른 서블릿으로 전송할 수 없음
- Refresh : 서블릿의 요청이 클라이언트의 웹 브라우저를 다시 거쳐 요청되는 방식
차이점 : 뒤로가기
- Location : 자바스크립트에서 재요청하는 방식
- Dispatch : 서블릿이 직접 요청하는 방법. URL이 변경되지 않음
WEB-INF : 외부에서 사용할 수 없으며 private 객체속성을 가짐

메소드
builder() : 중간에 선언하는 변수를 생략할수 있음. 가독성이 좋아짐
 
number, parentno, title, content, writeid, 

JS 특수기호 
- &nbsp; : 띄어쓰기 한칸
- &gt; : > 
- &lt; : <
searchForm.submit() : Form객체안의 데이터를 전송

























