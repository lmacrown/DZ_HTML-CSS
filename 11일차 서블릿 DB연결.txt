6장
form 태그 속성
- name : <form> 태그의 이름을 지정, 여러 개의 form이 존재할 경우 구분하는 역할을 함
- method : <form> 태그 안에서 데이터를 전송할 때 전송 방법 지정
- action : <form> 태그에서 데이터를 전송할 서블릿이나 JSP를 지정
- encType : <form> 태그에서 전송할 데이터의 encoding 타입을 지정, 파일 업로드시 nultipart/form-data로 지정
StringBuilder : 문자열을 가장 좋게 연결하는 함수
getQueryString() : 쿼리스트링을 얻어올 때 사용
- get : URL뒤에 name,value형태로 값을 전송, 보안이 취약하고 최대 255자
- post : body영역에 데이터를 숨겨서 전송, 전송용량은 무제한이나 속도가 느림
dohandle : doget(), dopost() 메서드로 처리후 기능을 구현하는 데 사용
preventDefault() : herf를 통해 이동하거나 창이 새로고침하여 실행을 막아줌
정규 표현식 메서드 : 입력된 형식이 틀에 맞는지를 판별
숫자 확인 [0-9]+ : 반드시 하나 이상 숫자가 있어야함
7장
서블릿 비즈니스 처리 작업 : 서블릿이 클라이언트로부터 요청을 받으면 그 요청에 대해 작업을 수행하는 것
- 웹 사이트 회원 등록 요청 처리 작업
- 웹 사이트 로그인 요청 처리 작업
- 쇼핑몰 상품 주문 처리 작업
1. 클라이언트로부터 요청을 받음
2. 데이터베이스 연동과 같은 비즈니스 로직을 처리
3. 처리 결과를 클라이언트에게 돌려줌
DAO : data에 접근하기 위한 객체. DataBase 접근을 위한 로직과 비지니스 로직을 분리하기 위해 사용
DTO : 계층간 데이터 교환을 위한 JavaBeans. 로직을 가지지 않는 순수한 데이터 객체
VO : 값을 읽기 위해서만 사용
JNDI : 필요한 자원을 키/값 쌍으로 저장한 후 필요할 때 키를 이용해 값을 얻어옴
DataSource 설정 : context.html에 DB 정보를 입력
- name : DataSource에 대한 JNDI 이름
- auth : 인증 주체
- type : 데이터베이스 종류별 DataSource
- driverClassName : 연결할 데이터베이스 종류에 따른 드라이버 클래스 이름
- factory : 연결할 데이터베이스 종류에 따른 ConnectionPool 생성 클래스 이름
- username : 데이터베이스 접속 ID
- password : 데이터베이스 접속 비밀번호
- maxActive : 동시에 최대호 데이터베이스에 연결할수 있는 Connection 수
- maxWait : 새로운 연결이 생길 때까지 기다릴 수 있는 최대 시간
- URL : 접속할 데이터베이스 주소와 포트번호 및 SID 
CRUD 작업 순서 
1. 목록 생성
2. 데이터 삭제
3. 데이터 상세보기
4. 데이터 수정
5. 데이터 신규 등록
6. 데이터 검색
7. 페이징