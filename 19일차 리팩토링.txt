forward : 화면이 전환되어 페이지를 이동함,주소가 안바뀜
json : 화면만 전환되고 페이지는 그대로 유지. 메시지를 화면에 띄우기 쉬움.
수행한 결과에 따라 출력할 결과가 다른 것에 적합. 화면 일부분을 바꾸기 편함

화면 동적 변경
1. innerHtml : 직접 HTML을 넣어서 작성. 유지, 보수에 안좋음
2. DOM Api : HTML에서 제어하는 요소들의 명령 집합체

프젝하면서 배운점
WEB-INF : 주소로 입장을 못하게 함
request.setCharacterEncoding("UTF-8"); : 받아온 데이터를 한글패치
value="${param.변수명}" : 입력한 값을 변수명에 저장함
fetch로 데이터를 보낼 경우 데이터를 저장할 임시 저장소가 필요함
저장소 객체 생성  : DiskFileItemFactory factory = new DiskFileItemFactory();
업로드 파일 임시로 저장할 경로 설정 : factory.setRepository(new File("c:\\upload"));
파일 업로드 객체에 저장소 설정 : ServletFileUpload upload = new ServletFileUpload(factory);
페이징 : 현재 페이지에 대한 정보를 전송하고 데이터에 대하여 해당 페이지가 존재하는 위치를 확인해야됨
value를 통하여 변수를 저장하여 전송

클래스 호출 순서
web.xml->jsp(프론트엔드)->servlet->action->DAO->servlet->출력
web.xml : 서블릿 클래스를 지정하고 변수명과 매핑할 주소 및 메서드를 입력함
servlet : init을 통하여 web.xml에 저장한 변수명과 매핑할 주소를 받아옴
doget을 통하여 jsp에서 받아온 데이터를 init에 있는 값과 비교하여 action에 연결함
