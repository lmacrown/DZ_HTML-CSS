어노테이션 : DI 원칙에 따라 관련된 설정을 직접 코딩함
어노테이션 관련 클래스
- DefaultAnnotationHandlerMapping : 클래스 레벨에서 @RequestMapping을 처리
- AnnotationMethodHandlerAdapter : 메서드 레벨에서 @RequestMapping을 처리
context-component-scan : 해당 패키지의 모든 어노테이션으로 지정된 클래스를 빈으로 만들어줌
서비스 : 웹 어플리키이션과 별개로 별도의 작업을 할수있음
@Controller : 사용자의 요청 진입 지점으로 요청에 따라 어떤 처리를 할지 결정
@RequestMapping : 특정 uri로 요청을 보내면 controller에서 어떠한 방식으로 처리할지 정의
매개변수 받는 방법 
@RequestParam : required를 지정하여 값을 필수로 받게 할 수 있음
value를 설정하여 매개변수를 바로 받을 수 있음
@ModelAttribute : 사용자의 요청을 객체 매핑하여 코드가 깔끔해지고 변경에 열려있음
@autowired : 의존관계 자동 주입
- 기존 XML파일에서 각각의 빈을 DI로 주입했던 기능을 어노테이션에서 자동으로 수행
- 별도의 setter나 생성자 없이 속성에 빈 주입 가능

메이븐 : 자동으로 스프링의 라이브러리 기능을 관리
sts : 이클립스 기반으로 만들어진 스프링 기반 애플리케이션 개발용 도구
메이븐 요소
- pom.xml : 프로젝트 정보가 표시되며 스프링에서 사용되는 여러 가지 라이브러리를 설정해 다운로드 함
- src/main/java : 자바 소스 파일이 위치
- src/main/resources : 프로퍼티 파일이나 XML 파일 등 리소스 파일이 위치
- src/main/webapp : WEB_INF 등 웹 애플리케이션 리소스가 위치
- src/test/java : JUnit 등 테스트 파일이 위치
- src/test/resources : 테스트에 필요한 resource 파일 위치
pom.xml의 정보 설정 태그 구성
- groupId : 프로젝트 그룹 id를 나타내며 일반적으로 도메인 이름을 사용해 설정
- artifactId : 프로젝트 아티팩트 id를 설정. 대개 패키지 이름으로 설정
- version : 프로젝트의 버전을 설정
- packaging : 애플리케이션 배포 시 패키징 타입 설정

ContextLoaderListener : 콘텐스트 로딩할 떄 이벤트를 자동으로 연결
** : 모든 하위폴더를 의미