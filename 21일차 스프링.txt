invoke : 


el : ${}
jstl : <c:>

Model : data
view : 출력
controller(action) : model,view 관리

entity : vo : 검색어
DAO : CRUD

xml : 주소값, 객체, 메서드 값을 저장함
jsp : view를 통하여 입력값을 받고 주소를 servlet으로 보냄
servlet : jsp로 부터 주소값을 받고 init을 통하여 web.xml에 저장한 객체값과 메서드를 받아오고
객체에 있는 메서드를 action과 맵핑후 제어를 넘김
action : servlet에서 받아온 메서드 실행
service : 실제 프로그램을 업무에 적용하는 사용자 입장에서 업무 단위, 즉 트랜잭선으로 작업 수행(메서드)
재사용성이 높아지고, 단일 단위로 작업함
DAO : DB에 접근하는 기능 수행
Bean : Spring IoC 컨테이너가 관리하는 자바 객체

18장
프레임워크 : 어떤 것을 구성하는 구조 또는 뼈대
일정한 기준에 따라 개발이 이뤄지도록 개발 생산성과 품질이 보장된 앱 개발
스프링 프레임워크 : 자바 웹 애플리케이션 개발을 위한 오픈 소스 프레임워크
톰캣 : 서블릿의 생성, 초기화, 서비스 실행, 소멸에 관한 모든 권한을 가짐
스프링 특징
- 가볍고 배우기 쉬우며 경량 컨테이너의 기능 수행
- 제어 역행 기술을 이용해 느슨한 결합을 제어
- 의존성 주입 기능 지원
- 관점 지향 기능을 이용해 자원 관리
- 영속성과 관련된 다양항 서비스 지원
- 수많은 라이브러리와의 연동 기능을 지원
스프링 주요 기능
- Core : 다른 기능과 설정을 분리하기 위한 IoC 기능을 제공
- Context : 스프링의 기본 기능으로서 애플리케이션의 각 기능을 하는 빈에 대한 접근 방법을 제공
- DAO : JDBC 기능을 좀 더 편리하게 사용할 수 있도록 함
- ORM : 하이버네이트나 마이바티스 같은 영속성 관련 프레임워크와 연동된 기능을 제공
- AOP : 관점 지향 기능을 제공
- WEB : 웹 애플리케이션 개발에 필요한 기능을 제공
- WebMVC : 스프링에서 MVC 구현에 관련된 기능을 제공

인터페이스(impl)를 만들고 실제 구현하는 객체와 연결하여 사용
주입 : 외부에서 클래스 값 설정을 넣어줌
1. 객체가 생성될 때 주입하는 방법
2. 메서드 set만들고 주입하는 방법
=>일반화 및 결합도 낮춤
bean 속성
- id : 빈 객체의 고유 이름으로 빈 id를 이용해 빈에 접근
- name : 객체의 별칭
- class : 생성할 클래스. 패키지 이름까지 입력해야함
- constructor-arg : 생성자를 이용해 값을 주입할 때 사용
- property : setter를 이용해 값을 주입할 때 사용

bean : object. impl
프록시 : 타겟 코드의 수정없이 접근제어 혹은 부가기능을 추가하기 위해 사용
동적 프록시 : 런타임 시점에 프록시 클래스를 만들어주는 방식
AOP(관점 지향 프로그래밍) : 메서드 안의 주기능과 보조 기능을 분리한 후 선택적으로 메서드에 적용해서 사용한다는 개념
AOP : 공통의 관심사를 적용해 발생하는 의존관계 복잡성과 코드 중복을 해소해 주는 프로그래밍
AOP관련 용어
- aspect : 구현하고자 하는 보조 기능을 의미
- advice : aspect의 실제 구현체를 의미. 메서드 호출을 기준으로 여러 지점에서 실행
- joinpoint : advice를 적용하는 지점을 의미. 스프링은 method 결합점만 제공
- pointcut : advice가 적용되는 대상을 지정. 패키지이름/클래스이름/메서드이름을 정규식으로 지정
- target : advice가 적용되는 클래스를 의미
- weaving : advice를 주기능에 적용하는 것을 의미
스프링 API를 이용한 AOP 기능 구현 과정 
- 타깃 클래스를 지정
- 어드바이스 클래스를 지정
- 설정 파일에서 포인트컷을 설정
- 설정 파일에서 어드바이스와 포인트컷을 결합하는 어드바이저를 설정
- 설정 파일에서 스프링의 ProxyFactoryBean 클래스를 이용해 타깃에 어드바이스를 설정
- getBean() 메서드로 빈 객체에 접근해 사용

스프링 MVC 기능 특징
- 모델2 아키텍처를 지원
- 스프링과 다른 모듈과의 연계가 쉬움
- 타일즈나 사이트메시 같은 View 기술과의 연계가 쉬움
- 태그 라이브러리를 통해 메시지 출력, 테마 적용, 입력 폼을 보다 쉽게 구현

스프링 프레임워크 MVC 구성요소
DispatcherServlet : 클라이언트의 요청을 전달받아 해당 요청에 대한 컨트롤러를 선택하여 클라이언트의 요청을 전달
또한 컨트롤러가 반환한 값을 view에 전달하여 알맞은 응답을 생성
HandlerMapping : 클라이언트가 요청한 URL을 처리할 컨트롤러를 지정
컨트롤러 : Model과 VIew의 연결하는 제어 로직
처리 결과를 DispatcherServlet에 전달
ModelAndView : 컨트롤러가 처리한 결과 및 뷰 선택에 필요한 정보를 저장
ViewResolver : 컨트롤러의 처리 결과를 전달할 뷰를 지정
View : 컨트롤러의 처리 결과 화면을 생성






